package main

import (
	"fmt"
)

func main() {
	var x int = 10   // Бинарная форма - 1010
    var i int = 2    // Номер бита

	fmt.Printf("Бинарная форма x: %b\n", x)
    // << двигает бит на n позиций влево
    x |= 1 << i        // 1110 = 14. Это оператор or - Он возвращает 1 если хотя бы 1 бит = 1 (Следовательно, если мы поставили 1, то он всегда будет возвращать 1)
    fmt.Printf("Бинарная форма после установления %d бита 1: %b (%d)\n", i, x, x) 

    x &^= 1 << i       // 1010 = обратно 10. Это оператор вернет 0. Можно также было написать (1<<i)^, чтобы & сравнивал с 11111011
    // & сравнение, где хотя бы 1 бит не равен 1 возвращает 0
    fmt.Printf("Бинарная форма после установления %d бита 0: %b (%d)\n", i, x, x)
}